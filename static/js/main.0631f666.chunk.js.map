{"version":3,"sources":["component/IsMaskOn.js","function/MaskHistoryApi.js","component/WeekRecord.js","function/CovidApi.js","component/CovidStatistics.js","function/NaverApi.js","component/News.js","component/Home.js","App.js","serviceWorker.js","index.js","imgs/angry.png","imgs/mask.png","imgs/home.png"],"names":["IsMaskOn","useState","onOff","setOnOff","conn","WebSocket","useEffect","onopen","console","log","onmessage","evt","message","JSON","parse","data","withMask","onclose","className","getMaskHistory","todayText","a","statusCode","axios","method","url","headers","Accept","params","date","then","res","status","catch","error","undefined","response","WeekRecord","maskHistory","setMaskHistory","noMask","setNoMask","today","Date","getFullYear","getMonth","getDate","reverse","map","i","outing","wearing","dayCount","startDay","setDate","unavailableText","beforeToday","unavailables","dates","item","idx","getCovidNum","today_minus7","queryParams","encodeURIComponent","CovidStatistics","labels","datasets","covidData","setCovidData","moment","format","subtract","setItem","decideCnt","dataColor","datas","body","items","label","fill","barPercentage","length","filter","it","createDt","tmp","todaycnt","element","splice","stateDt","toString","slice","backgroundColor","borderColor","hoverBackgroundColor","type","options","responsive","plugins","datalabels","display","color","anchor","scales","xAxes","stacked","gridLines","yAxes","width","height","getNews","query","newslist","News","newsList","setNewsList","key","onClick","link","window","open","title","replaceAll","description","pubDate","Home","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.0631f666.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../styles/IsMaskOn.css\";\n\nfunction IsMaskOn() {\n  const [onOff, setOnOff] = useState(true);\n  const conn = new WebSocket(\n    \"wss://a80a3x9fs2.execute-api.us-east-1.amazonaws.com/production\"\n  );\n\n  useEffect(() => {\n    //socket 통신 연결\n    conn.onopen = () => {\n      console.log(\"connected\");\n    };\n    // listen to onmessage event\n    conn.onmessage = (evt) => {\n      // 메시지 왔을 때 할일 (evt에 저장)\n      const message = JSON.parse(evt.data);\n      console.log(message.withMask);\n      setOnOff(message.withMask);\n    };\n\n    conn.onclose = () => {\n      console.log(\"disconnected\");\n    };\n  }, []);\n\n  return (\n    <div className=\"IsMaskOn__Wrapper\">\n      {/* <div className=\"IsMaskOn-result\">IsMaskOn Text</div> */}\n      {onOff === true ? (\n        <h1>\n          <span>오</span>\n          <span>늘</span>\n          <span>도</span>\n          <span>&nbsp;</span>\n          <span>좋</span>\n          <span>은</span>\n          <span>하</span>\n          <span>루</span>\n          <span>:)</span>\n        </h1>\n      ) : (\n        <h1>\n          <span>마</span>\n          <span>스</span>\n          <span>크</span>\n          <span>착</span>\n          <span>용</span>\n          <span>해</span>\n          <span>주</span>\n          <span>세</span>\n          <span>요</span>\n          <span>!</span>\n        </h1>\n      )}\n    </div>\n  );\n}\n\nexport default IsMaskOn;\n","import axios from \"axios\";\n\nconst putMaskHistory = async (todayText, isMaskOn) => {\n  let statusCode = 0;\n\n  await axios({\n    method: \"put\",\n    url:\n      \"https://m6lhwe6p4g.execute-api.us-east-1.amazonaws.com/dev/mask-history\",\n    headers: {\n      Accept: \"application/json\",\n    },\n    params: {\n      date: todayText,\n      withMask: isMaskOn,\n    },\n  })\n    .then((res) => {\n      statusCode = res.status;\n    })\n    .catch((error) => {\n      if (error.response === undefined) {\n      } else if (error.response.status === 400) {\n        statusCode = error.response.status;\n      }\n    });\n  return { statusCode };\n};\n\nconst getMaskHistory = async (todayText) => {\n  let statusCode = 0;\n  let data;\n\n  await axios({\n    method: \"get\",\n    url:\n      \"https://m6lhwe6p4g.execute-api.us-east-1.amazonaws.com/dev/mask-history\",\n    headers: {\n      Accept: \"application/json\",\n    },\n    params: {\n      date: todayText,\n    },\n  })\n    .then((res) => {\n      statusCode = res.status;\n      data = res.data;\n    })\n    .catch((error) => {\n      if (error.response === undefined) {\n      } else if (error.response.status === 400) {\n        statusCode = error.response.status;\n      }\n    });\n  return { statusCode, data };\n};\n\nexport { getMaskHistory, putMaskHistory };\n","import React, { useEffect, useState } from \"react\";\nimport ReactWeeklyDayPicker from \"react-weekly-day-picker\";\nimport \"../styles/WeekRecord.css\";\nimport { getMaskHistory, putMaskHistory } from \"../function/MaskHistoryApi\";\nimport AngryFace from \"../imgs/angry.png\";\nimport MaskFace from \"../imgs/mask.png\";\nimport homeImg from \"../imgs/home.png\";\n\nfunction WeekRecord() {\n  const [maskHistory, setMaskHistory] = useState();\n  const [noMask, setNoMask] = useState([]);\n  const today = new Date();\n  const todayText =\n    today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\n  useEffect(() => {\n    getMaskHistory(todayText).then((res) => {\n      if (res.statusCode == 200) {\n        setMaskHistory(res.data.reverse());\n      } else {\n        console.log(res.statusCode);\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    if (maskHistory) {\n      setNoMask(\n        maskHistory.map((i) => {\n          if (i.outing > i.wearing) {\n            return i.date;\n          } else {\n            return null;\n          }\n        })\n      );\n    }\n  }, [maskHistory]);\n\n  return (\n    <div>\n      <ReactWeeklyDayPicker\n        dayCount={7}\n        startDay={new Date().setDate(today.getDate() - 6)}\n        todayText={\"-오늘-\"}\n        unavailableText={\"  \"}\n        beforeToday={true}\n        unavailables={{\n          dates: noMask, //unavailable dates list\n        }}\n      />\n\n      <div className=\"rwdpText__Wrapper\">\n        <div>\n          {maskHistory\n            ? maskHistory.map((item, idx) => (\n                // <div key={idx.toString()}>\n                //   {item.outing !== 0\n                //     ? item.outing + \"중\" + item.wearing + \"번 착용\"\n                //     : null}\n                // </div>\n                <div className=\"faceEmoji__Wrapper\" key={idx.toString()}>\n                  {item.outing !== 0 ? (\n                    item.outing > item.wearing ? (\n                      <img src={AngryFace} alt=\"emoji\"></img>\n                    ) : (\n                      <img src={MaskFace} alt=\"emoji\" />\n                    )\n                  ) : (\n                    <img src={homeImg} alt=\"emoji\" />\n                  )}\n                </div>\n              ))\n            : null}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default WeekRecord;\n","import axios from \"axios\";\n\nconst getCovidNum = async (today, today_minus7) => {\n  let statusCode = 0;\n  let data;\n  const key =\n    \"42jdeu6I1jMneyadNT5VHzjmEOHAGF9cwToo2UZeFcBGFJszJOPybAoKjBUxYoPyLiNl1OVYn%2FB7oVDDF5UJKw%3D%3D\";\n  var queryParams =\n    \"?\" + encodeURIComponent(\"ServiceKey\") + \"=\" + key; /*Service Key*/\n  //keyeh encodeURIComponent로 감싸니까 변형돼서 인증 키가 아니라고 뜸.\n  // queryParams += '&' + encodeURIComponent('ServiceKey') + '=' + encodeURIComponent('-'); /**/\n  queryParams +=\n    \"&\" + encodeURIComponent(\"pageNo\") + \"=\" + encodeURIComponent(\"1\"); /**/\n  queryParams +=\n    \"&\" + encodeURIComponent(\"numOfRows\") + \"=\" + encodeURIComponent(\"10\"); /**/\n  queryParams +=\n    \"&\" +\n    encodeURIComponent(\"startCreateDt\") +\n    \"=\" +\n    encodeURIComponent(today_minus7); /**/\n  queryParams +=\n    \"&\" +\n    encodeURIComponent(\"endCreateDt\") +\n    \"=\" +\n    encodeURIComponent(today); /* */\n\n  await axios({\n    method: \"get\",\n    url: \"openapi/service/rest/Covid19/getCovid19InfStateJson\" + queryParams,\n    // headers:{'Access-Control-Allow-Origin':'*'}\n  })\n    .then((res) => {\n      data = res.data.response;\n      statusCode = res.status;\n    })\n    .catch((error) => {\n      if (error.response === undefined) {\n      } else if (error.response.status === 400) {\n        statusCode = error.response.status;\n      }\n    });\n  return { statusCode, data };\n};\n\nexport { getCovidNum };\n","import React, { useEffect, useState } from \"react\";\nimport { getCovidNum } from \"../function/CovidApi\";\nimport Bar from \"react-chartjs-2\";\nimport moment from \"moment\";\nimport \"chartjs-plugin-datalabels\";\n\nfunction CovidStatistics() {\n  const [covidData, setCovidData] = useState({ labels: [], datasets: [] });\n  const today = moment().format(\"YYYYMMDD\");\n  const today_minus7 = moment().subtract(7, \"days\").format(\"YYYYMMDD\");\n  const [item, setItem] = useState([]);\n  let decideCnt = [];\n  let labels = [];\n  let dataColor = [\n    \"#837FFF\",\n    \"#837FFF\",\n    \"#837FFF\",\n    \"#837FFF\",\n    \"#837FFF\",\n    \"#837FFF\",\n    \"#FD7468\",\n  ];\n  const options = {\n    responsive: true,\n    plugins: {\n      datalabels: {\n        display: true,\n        color: \"#000000\",\n        anchor: \"end\",\n      },\n    },\n    scales: {\n      xAxes: [\n        {\n          color: \"white\",\n          stacked: true,\n          display: true,\n          gridLines: {\n            display: false,\n          },\n        },\n      ],\n      yAxes: [\n        {\n          stacked: true,\n        },\n      ],\n    },\n  };\n\n  useEffect(() => {\n    getCovidNum(today, today_minus7).then((datas) => {\n      datas.data ? setItem(datas.data.body.items.item) : setItem();\n    });\n    setCovidData({\n      labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"],\n      datasets: [\n        {\n          label: \"Covid Datasets\",\n          data: decideCnt ? decideCnt : [34, 45, 66, 20, 32, 55, 98],\n          fill: true,\n          barPercentage: 0.5,\n        },\n      ],\n    });\n  }, []);\n\n  useEffect(() => {\n    if (item.length > 8) {\n      setItem(\n        item.filter((it, idx) => {\n          if (idx > 1) {\n            return item[idx - 1].createDt !== item[idx].createDt;\n          } else {\n            return item;\n          }\n        })\n      );\n    }\n\n    let tmp = 0,\n      todaycnt = 0;\n    decideCnt = item.map((element) => {\n      todaycnt = tmp - element.decideCnt;\n      tmp = element.decideCnt;\n      if (todaycnt > 0) {\n        return todaycnt;\n      }\n    });\n    decideCnt.reverse();\n    decideCnt.splice(7);\n\n    //stateDt\n    labels = item.map((element) => {\n      return (\n        element.stateDt.toString().slice(4, 6) +\n        \"월 \" +\n        element.stateDt.toString().slice(6, 8) +\n        \"일\"\n      );\n    });\n    labels.reverse();\n    labels.splice(7);\n\n    //data set\n    setCovidData({\n      labels: labels ? labels : [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"],\n      datasets: [\n        {\n          label: \"Covid Datasets\",\n          data: decideCnt ? decideCnt : [0, 0, 0, 0, 0, 0, 0],\n          backgroundColor: dataColor,\n          borderColor: dataColor,\n          hoverBackgroundColor: dataColor,\n          fill: true,\n          barPercentage: 0.5,\n        },\n      ],\n    });\n  }, [item]);\n\n  return (\n    <div className=\"CovidStatistics__Wrapper\">\n      <div className=\"CovidStatistics-box\">\n        <Bar\n          data={covidData}\n          type=\"bar\"\n          options={options}\n          width={400}\n          height={180}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default CovidStatistics;\n","import axios from 'axios';\n\nconst getNews = async() =>{\n    let statusCode = 0;\n    let newslist;\n    const client_id='b0iacNtKEYbJzAnGZPVE';\n    const client_secret='7hIMqLnaGF';\n    await axios({\n        method:'get',\n        url: 'v1/search/news.json',\n        params:{query: '코로나', display:20},\n        headers:{\n            'X-Naver-Client-Id':client_id,\n            'X-Naver-Client-Secret': client_secret\n        }\n    }).then((res) => {\n        newslist = res.data;\n        statusCode = res.status;\n    }).catch((error) => {\n        if (error.response === undefined) {\n        } else if (error.response.status === 400) {\n          statusCode = error.response.status;\n        }\n      });\n    return {statusCode, newslist};\n}\n\nexport {getNews};","import React, { useEffect, useState } from \"react\";\nimport { getNews } from \"../function/NaverApi\";\nimport \"../styles/News.css\";\n\nfunction News() {\n  const [newsList, setNewsList] = useState([]);\n  //title, link, originallink, description, pubDate\n\n  useEffect(() => {\n    getNews().then((data) => {\n      setNewsList(data.newslist.items);\n    });\n  }, []);\n\n  const handleNews = (link) => {\n    window.open(link);\n  };\n\n  return (\n    <div className=\"News__Wrapper\">\n      <div className=\"News-box\">\n        {newsList.map((i, idx) => (\n          <div\n            className=\"News-Content\"\n            key={idx.toString()}\n            onClick={() => handleNews(i.link)}\n          >\n            <div className=\"News-title\">\n              {i.title\n                .replaceAll(\"<b>\", \"\")\n                .replaceAll(\"</b>\", \"\")\n                .replaceAll(\"&quot;\", \"\")}\n            </div>\n            <div className=\"News-description\">\n              {i.description\n                .replaceAll(\"<b>\", \"\")\n                .replaceAll(\"</b>\", \"\")\n                .replaceAll(\"&quot;\", \"\")}\n              ...\n            </div>\n            <div className=\"News-pubDate\">{i.pubDate.slice(0, 17)}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default News;\n","import React from \"react\";\nimport IsMaskOn from \"./IsMaskOn\";\nimport WeekRecord from \"./WeekRecord\";\nimport CovidStatistics from \"./CovidStatistics\";\nimport News from \"./News\";\nimport \"../styles/Home.css\";\n\nfunction Home() {\n  return (\n    <div className=\"Page__Wrapper\">\n      <div className=\"LeftSide\">\n        <IsMaskOn />\n        <WeekRecord />\n        <CovidStatistics />\n      </div>\n      <div className=\"RightSide\">\n        <News />\n      </div>\n      {/* <div className=\"Row1\">\n      </div>\n      <div className=\"Row2\">\n      </div>\n      <div className=\"Row3\">\n      </div> */}\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport './App.css';\nimport Home from './component/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/angry.f6a9f98f.png\";","module.exports = __webpack_public_path__ + \"static/media/mask.dd9e8fe4.png\";","module.exports = __webpack_public_path__ + \"static/media/home.52de6dd5.png\";"],"sourceRoot":""}